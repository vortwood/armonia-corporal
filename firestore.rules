rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for security
    function isValidEmail(email) {
      return email is string && email.matches('.*@.*\\..*');
    }
    
    function isValidPhone(phone) {
      return phone is string && phone.matches('^09[0-9]{8}$');
    }
    
    function isValidAppointmentData(data) {
      return data.keys().hasAll(['name', 'phone', 'mail', 'hora', 'tipos', 'professionalId']) &&
             data.name is string &&
             data.name.size() > 0 &&
             data.name.size() < 100 &&
             isValidPhone(data.phone) &&
             isValidEmail(data.mail) &&
             data.hora is string &&
             data.hora.size() > 0 &&
             data.tipos is list &&
             data.tipos.size() > 0 &&
             data.tipos.size() < 10 &&
             data.professionalId is string &&
             data.professionalId.size() > 0;
    }
    
    function isValidDateTime(dateTime) {
      // Basic validation for DD/MM/YYYY - HH:MM format
      return dateTime is string && 
             dateTime.matches('[0-9]{2}/[0-9]{2}/[0-9]{4} - [0-9]{2}:[0-9]{2}');
    }
    
    function isValidService(service) {
      return service in ["Facial_Hidratante", "Peeling_Quimico", "Masaje_Relajante", "Masaje_Descontracturante", "Aparatologia", "Limpieza_Facial", "Tratamiento_Antiedad", "Masajes_Relajantes", "Tratamientos_Faciales", "Tratamientos_Corporales", "Depilacion", "Manicura_Pedicura"];
    }
    
    function isValidProfessional(professional) {
      // Add professional validation based on your current staff
      return professional is string && professional.size() > 0 && professional.size() < 50;
    }
    
    function isValidAppointmentUpdate(data) {
      return isValidAppointmentData(data) &&
             isValidDateTime(data.hora) &&
             data.tipos.toSet().difference(["Facial_Hidratante", "Peeling_Quimico", "Masaje_Relajante", "Masaje_Descontracturante", "Aparatologia", "Limpieza_Facial", "Tratamiento_Antiedad", "Masajes_Relajantes", "Tratamientos_Faciales", "Tratamientos_Corporales", "Depilacion", "Manicura_Pedicura"].toSet()).size() == 0;
    }
    
    // Rate limiting helper (basic)
    function isNotSpamming() {
      // This is a basic check - in production you'd want more sophisticated rate limiting
      return true;
    }
    
    // Appointment collections - Dynamic professional support
    match /{professionalCollection}/{appointmentId} {
      
      // Allow read access for admin verification (server-side only)
      allow read: if false; // Only server-side reads allowed
      
      // Allow creation of new appointments with validation
      allow create: if 
        // Validate collection name matches professional in document
        professionalCollection.matches('^[a-zA-Z0-9_]+$') &&
        // Validate appointment data structure
        isValidAppointmentUpdate(resource.data) &&
        // Prevent spam
        isNotSpamming() &&
        // Additional security: timestamp must be in the future
        request.time < timestamp.date(2030, 1, 1); // Prevent far future dates
      
      // Prevent updates and deletes from client-side
      // Only server-side operations should handle these
      allow update, delete: if false;
    }
    
    // Legacy clientes collection - read-only for backward compatibility
    match /clientes/{clientId} {
      allow read: if false; // Server-side only
      allow write: if false; // No longer accepting writes
    }
    
    // Configuration collections (future use)
    match /config/{configType} {
      allow read: if false;  // Server-side only
      allow write: if false; // Server-side only
    }
    
    // Professionals collection - Allow full access for admin panel
    match /professionals/{professionalId} {
      allow read, write: if true;  // Allow full access for admin panel
    }
    
    // Services configuration - Allow full access for admin panel  
    match /services/{serviceId} {
      allow read, write: if true;  // Allow full access for admin panel
    }
    
    // Appointments collection - Allow full access for booking and admin
    match /appointments/{appointmentId} {
      allow read, write: if true;  // Allow full access for booking and admin
    }
    
    // Audit logs (future use)
    match /audit/{logId} {
      allow read: if false;  // Server-side only
      allow write: if false; // Server-side only
    }
    
    // Default rule: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}